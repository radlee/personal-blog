<a href="/dashboard">&larr; Back</a>
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@100&display=swap" rel="stylesheet">
<style>
.ql-font-roboto {
  font-family: 'Poppins';
}
</style>

<div class="admin-title">
    <h2>Add New Blog Post</h2>
</div>

<form action="/add-post" method="POST" id="add-form" enctype="multipart/form-data">

    <label for="title"><b>Title</b></label>
    <input type="text" placeholder="Post Title" name="title" required>

    <label for="title"><b>Upload Cover Image</b></label>
    <br />
    <input class="form-control form-control-lg" type="file" name="cover" required>
    <br />

    <!-- Hidden input to store Quill editor content -->
    <input type="hidden" id="quill-content" name="body" required>

    <label for="body"><b>Content</b></label>
    <div id="editor-container"></div>

    <input type="submit" value="Add" class="btn">

</form>

<!-- Initialize Quill editor -->
<script>
  document.addEventListener("DOMContentLoaded", function() {

    var toolbarOptions = [
  ['bold', 'italic', 'underline', 'strike'],        // toggled buttons
  ['blockquote', 'code-block', 'image', 'link'],

  [{ 'header': 1 }, { 'header': 2 }],               // custom button values
  [{ 'list': 'ordered'}, { 'list': 'bullet' }],
  [{ 'script': 'sub'}, { 'script': 'super' }],      // superscript/subscript
  [{ 'indent': '-1'}, { 'indent': '+1' }],          // outdent/indent
  [{ 'direction': 'rtl' }],                         // text direction

  [{ 'size': ['small', false, 'large', 'huge'] }],  // custom dropdown
  [{ 'header': [1, 2, 3, 4, 5, 6, false] }],

  [{ 'color': [] }, { 'background': [] }],          // dropdown with defaults from theme
  [{ 'font': [] }],
  [{ 'align': [] }],

  ['clean']                                         // remove formatting button
];



    var quill = new Quill('#editor-container', {
      modules: {
        toolbar: toolbarOptions
      },
      placeholder: 'Compose an epic...',
      theme: 'snow'  // or 'bubble'
    });

    var form = document.querySelector('form');
    var quillContentInput = document.getElementById('quill-content');

    form.addEventListener('submit', function() {
      var editorContent = document.querySelector('.ql-editor').innerHTML;
      quillContentInput.value = editorContent;
    });
  });
</script>

<!-- <script>
  ClassicEditor
      .create( document.querySelector( '#editor' ), {
        ckfinder: {
        // CKFinder configuration options
        uploadUrl: '/upload', // Set the URL to your Express.js route
        // Enable the XMLHttpRequest.withCredentials property.
        withCredentials: true,
        
        // Headers sent along with the XMLHttpRequest to the upload server.
        headers: {
            'X-CSRF-TOKEN': 'CSFR-Token',
            Authorization: 'Bearer <JSON Web Token>'
        }

      }
      } )
      .catch( error => {
          console.error( error );
      } );
</script> -->